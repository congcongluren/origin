{"version":3,"file":"single-spa.js","sources":["../../src/applications/app.helpers.js","../../src/lifecycles/bootstrap.js","../../src/lifecycles/load.js","../../src/lifecycles/mount.js","../../src/lifecycles/unmount.js","../../src/applications/start.js","../../src/applications/navigations/navigator-events.js","../../src/applications/navigations/reroute.js","../../src/applications/app.js"],"sourcesContent":["// 描述应用整个状态\nexport const NOT_LOADED = 'NOT_LOADED'; // 应用初始状态\nexport const LOADING_SOURCE_CODE = 'LOADING_SOURCE_CODE'; // 加载资源\nexport const NOT_BOOTSTRAPPED = 'NOT_BOOTSTRAPPED'; // 还没有调用bootstrap方法\nexport const BOOTSTRAPPING = 'BOOTSTRAPPING'; // 启动中\nexport const NOT_MOUNTED = 'NOT_MOUNTED'; // 没有调用mount方法\nexport const MOUNTING = 'MOUNTING'; // 正在挂载中\nexport const MOUNTED = 'MOUNTED'; // 挂载完毕\nexport const UPDATING = 'UPDATING'; // 更新中\nexport const UNMOUNTING = 'UNMOUNTING'; // 解除挂载\nexport const UNLOADING = 'UNLOADING'; // 完全卸载中\nexport const LOAD_ERR = 'LOAD_ERR'; // 加载失败\nexport const SKIP_BECAUSE_BROKEN = 'SKIP_BECAUSE_BROKEN'; // 代码异常\n\n// 当前应用是否被激活\nexport function isActive(app) {\n  return app.status === MOUNTED\n}\n\n// 当前应用是否需要被激活\nexport function shouldBeActive(app) {\n  // 返回true，应用开始初始化一系列操作\n  return app.activeWen(window.location)\n}","import { BOOTSTRAPPING, NOT_BOOTSTRAPPED, NOT_LOADED, NOT_MOUNTED } from \"../applications/app.helpers\";\n\nexport async function toBootstrapPromise(app) {\n  if (app.status !== NOT_BOOTSTRAPPED) {\n    return app;\n  }\n  app.status = BOOTSTRAPPING;\n  await app.bootstrap(app.customProps);\n  app.status = NOT_MOUNTED;\n\n  return app;\n}","import {\n  LOADING_SOURCE_CODE,\n  NOT_BOOTSTRAPPED\n} from \"../applications/app.helpers\";\n\nfunction flattenFnArray(fns) {\n  // 函数数组转换成函数\n  fns = Array.isArray(fns) ? fns : [fns];\n  // 通过promise链来链式调用  多个方法组合成一个方法\n  return (props) => fns.reduce((p, fn) => p.then(() => fn(props)), Promise.resolve());\n}\n\nexport async function toLoadPromise(app) {\n  if (app.loadPromise) {\n    return app.loadPromise; // 缓存机制\n  }\n\n  return (\n    app.loadPromise = Promise.resolve().then(async () => {\n      app.status = LOADING_SOURCE_CODE;\n      let {\n        bootstrap,\n        mount,\n        unmount\n      } = await app.loadApp(app.customProps);\n      app.status = NOT_BOOTSTRAPPED; // 没有调用bootstrap方法\n    \n      // 将多个promise组合到一起\n      app.bootstrap = flattenFnArray(bootstrap);\n      app.mount = flattenFnArray(mount);\n      app.unmount = flattenFnArray(unmount);\n      \n      delete app.loadPromise;\n      return app\n    })\n  )\n}","import { MOUNTED, MOUNTING, NOT_MOUNTED } from \"../applications/app.helpers\";\n\nexport async function toMountPromise(app) {\n  if (app.status !== NOT_MOUNTED) {\n    return app;\n  }\n  app.status = MOUNTING;\n  await app.mount(app.customProps);\n  app.status = MOUNTED;\n\n  return app;\n}","import { MOUNTED, NOT_MOUNTED, UNMOUNTING } from \"../applications/app.helpers\";\n\nexport async function toUnmountPromise(app) {\n  // 当前应用没有被挂载直接跳过\n  if (app.status !== MOUNTED){\n    return app;\n  }\n\n  app.status = UNMOUNTING;\n  await app.unmount(app.customProps);\n  app.status = NOT_MOUNTED;\n  return app;\n}","import { reroute } from \"./navigations/reroute\";\n\nexport let started = false;\nexport function start () {\n  // 需要挂载应用  \n  started = true;\n  reroute(); // 除了加载应用，还需要挂载应用\n}","// hashchange popstate\n\nimport {\n  reroute\n} from \"./reroute\";\n\nexport const routingEventsListeningTo = ['hashchange', 'popstate'];\n\nfunction urlReroute() {\n  reroute([], arguments); // 会根据路径来重新加载不同的应用\n}\n\nconst captureEventListeners = { // 后续挂载的事件先暂停\n  hashchange: [],\n  popstate: [] // 当应用切换完成后可以调用\n}\n\n// 处理应用加载的逻辑在最前面\nwindow.addEventListener('hashchange', urlReroute);\nwindow.addEventListener('popstate', urlReroute);\n\nconst originalAddEventListener = window.addEventListener;\nconst originalRemoveEventListener = window.removeEventListener;\n\nwindow.addEventListener = function (eventName, fn) {\n\n  if (\n    routingEventsListeningTo.indexOf(eventName) >= 0 &&\n    !captureEventListeners[eventName].some(listener => listener == fn)\n  ) {\n    captureEventListeners[eventName].push(fn);\n    return\n  }\n\n  return originalAddEventListener.apply(this, arguments)\n}\n\nwindow.removeEventListener = function (eventName, fn) {\n  if ( routingEventsListeningTo.indexOf(eventName) >= 0 ) {\n    captureEventListeners[eventName] = captureEventListeners[eventName].filter(l => l !== fn);\n    return\n  }\n  return originalRemoveEventListener.apply(this, arguments)\n}\n\n// 如果hash变化时可以切换\n// 浏览器路由，浏览器路由是h5api的时候不会触发popstate\nfunction patchedUpdateState(updateState,methodName) {\n  return function() {\n    const urlBefore = window.location.href;\n    updateState.apply(this,arguments);\n    const urlAfter = window.location.href;\n    if(urlBefore !== urlAfter) {\n      // 重新加载应用，加载事件源\n      urlReroute(new PopStateEvent('popstate'));\n    }\n  }\n} \n\nwindow.history.pushState = patchedUpdateState(window.history.pushState, 'pushState')\nwindow.history.replaceState = patchedUpdateState(window.history.replaceState, 'replaceState')\n\n// 用户可能还会绑定自己的路由事件 vue\n// 当我们应用切换后，还需要处理原来的方法，需要在应用切换后再执行","import { toBootstrapPromise } from \"../../lifecycles/bootstrap\";\nimport { toLoadPromise } from \"../../lifecycles/load\";\nimport { toMountPromise } from \"../../lifecycles/mount\";\nimport { toUnmountPromise } from \"../../lifecycles/unmount\";\nimport { getAppChanges } from \"../app\";\nimport { started } from \"../start\";\n\nimport './navigator-events'\n\n// 核心应用处理方法\nexport function reroute() {\n  /**\n   * 需要获取要加载的应用\n   * 需要获取要被挂载的应用\n   * 哪些应用需要被卸载\n  */\n\n  const { appsToLoad, appsToMount, appsToUnmount } = getAppChanges();\n  if(started){\n    // app装载\n    return performAppChanges(); // 根据路径来装载应用\n  }else{\n    // 注册应用时，需要预先加载\n    return loadApps(); // 预加载应用\n  }\n\n  async function loadApps() { // 预加载应用\n    let apps = await Promise.all(appsToLoad.map(toLoadPromise)); // 获取到bootstrap，mount和unmount 方法放到app上\n    \n  }\n\n  async function performAppChanges() { // 根据路径来装载应用\n    // 先卸载不需要的应用\n    let unmountPromise = appsToUnmount.map(toUnmountPromise); // 需要卸载的app\n\n    // 加载需要的应用\n    appsToLoad.map(async (app)=>{ // 将需要加载的应用拿到 =》 加载 =》 启动 =》 挂载\n      app = await toLoadPromise(app);\n\n      app = await toBootstrapPromise(app);\n\n      app = toMountPromise(app);\n\n      return app;\n    })\n\n    appsToMount.map(async (app)=>{\n\n      app = await toBootstrapPromise(app);\n      \n      app = toMountPromise(app);\n      \n      return app\n    })\n  }\n}\n\n// 这个流程是用来初始化操作的，我们还需要 当路径切换时重新加载应用\n// 路由拦截 核心：重写路由切换方法","import {\n  BOOTSTRAPPING,\n  LOADING_SOURCE_CODE,\n  MOUNTED,\n  NOT_BOOTSTRAPPED,\n  NOT_LOADED,\n  NOT_MOUNTED,\n  shouldBeActive,\n  SKIP_BECAUSE_BROKEN\n} from './app.helpers';\nimport {\n  reroute\n} from './navigations/reroute';\n/**\n * \n * @param {*} appName 应用名字\n * @param {*} loadApp 加载的应用\n * @param {*} activeWen 当激活时调用loadApp\n * @param {*} customProps 自定义属性\n * @param {*} status 状态\n */\n\nconst apps = []; // 用来存放所有的应用\n\n// 维护应有所有的状态，状态机\nexport function registerApplication(appName, loadApp, activeWen, customProps) {\n  apps.push({\n    name: appName,\n    loadApp,\n    activeWen,\n    customProps,\n    status: NOT_LOADED\n  })\n\n  reroute(); // 加载应用\n\n}\n\nexport function getAppChanges() {\n  const appsToUnmount = []; // 要卸载的app\n  const appsToLoad = []; // 要加载的app\n  const appsToMount = []; // 需要挂载的\n  apps.forEach(app => {\n    // app 需不需要被加载\n    const appShouldBeActive = shouldBeActive(app);\n    switch (app.status) {\n      case NOT_LOADED:\n      case LOADING_SOURCE_CODE:\n        if (appShouldBeActive) {\n          appsToLoad.push(app);\n        }\n        break;\n      case NOT_BOOTSTRAPPED:\n      case BOOTSTRAPPING:\n      case NOT_MOUNTED:\n        if (appShouldBeActive) {\n          appsToMount.push(app);\n        }\n        break;\n      case MOUNTED:\n        if (!appShouldBeActive) {\n          appsToUnmount.push(app);\n        }\n    }\n  });\n\n  return { appsToLoad, appsToMount, appsToUnmount }\n}"],"names":[],"mappings":"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"}